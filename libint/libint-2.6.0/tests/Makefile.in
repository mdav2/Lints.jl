
TOPDIR = ..
SRCDIR = ..
-include ../MakeVars
-include ../MakeVars.features

CPPFLAGS := -I../include -I../include/libint2 -Ieri -Ihartree-fock -DSRCDATADIR=\"$(SRCDIR)/lib/basis\" $(CPPFLAGS)
COMPUTE_LIB = -L../lib -lint2
# initialize statics explicitly in test.cc
CPPFLAGS += -DLIBINT2_CONSTEXPR_STATICS=0

check:: check1 check2 check3 check4

TEST1 = eri/test
check1:: $(TEST1)
	./$(TEST1) 0 2 && ./$(TEST1) 1 1 && ./$(TEST1) 2 1

$(TEST1): eri/test.o
	$(LTLINK) $(CXX) $(CXXFLAGS) $(LDFLAGS) $(COMPUTE_LIB) $(SYSLIBS) -o $@ $^

TEST2 = unit/test
TEST3 = hartree-fock/hartree-fock
TEST4 = hartree-fock/hartree-fock++

check2::
check3::
check4::

ifeq ($(LIBINT_HAS_CXX11),yes)
 ifeq ($(LIBINT_SUPPORTS_ONEBODY),yes)
  ifeq ($(LIBINT_SUPPORTS_ERI),yes)
   ifeq ($(LIBINT_HAS_EIGEN),yes)
    ifeq ($(LIBINT_CONTRACTED_INTS),yes)
     ifeq ($(LIBINT_SHELL_SET),1)
check2:: $(TEST2)
	./$^

check3:: $(TEST3)
	$^ hartree-fock/h2o.xyz | $(PYTHON) $^-validate.py

check4:: $(TEST4)
	$^ hartree-fock/h2o_rotated.xyz | $(PYTHON) $^-validate.py $(SRCDIR)/MakeVars.features
     endif
    endif
   endif
  endif
 endif
endif

CXXTEST2SRC = $(TEST2).cc $(TEST2)-core.cc $(TEST2)-permute.cc $(TEST2)-1body.cc $(TEST2)-2body.cc \
              $(TEST2)-core-ints.cc $(TEST2)-c-api.cc unit/c-api-util.cc
CXXTEST2OBJ = $(CXXTEST2SRC:%.cc=%.o)
CXXTEST2DEP = $(CXXTEST2SRC:%.cc=%.$(DEPSUF))
CTEST2SRC = unit/c-api.c
CTEST2OBJ = $(CTEST2SRC:%.c=%.o)


$(TEST2): $(CXXTEST2OBJ) $(CTEST2OBJ)
	$(LTLINK) $(CXX) $(CXXFLAGS) $(LDFLAGS) $(COMPUTE_LIB) $(SYSLIBS) -o $@ $^

$(TEST3): $(TEST3).o
	$(LTLINK) $(CXX) $(CXXFLAGS) $(LDFLAGS) $(COMPUTE_LIB) $(SYSLIBS) -o $@ $^

$(TEST4): $(TEST4).o
	$(LTLINK) $(CXX) $(CXXFLAGS) $(LDFLAGS) $(COMPUTE_LIB) $(SYSLIBS) -lpthread -o $@ $^

ifneq ($(HAVE_SYSTEM_BOOST_PREPROCESSOR_VARIADICS),1)

$(TOPDIR)/include/libint2/boost/preprocessor.hpp:: $(SRCDIR)/external/boost.tar.gz
	gunzip -c $(SRCDIR)/external/boost.tar.gz | tar -xf - -C $(TOPDIR)/include/libint2

$(CXXTEST2SRC) :: $(TOPDIR)/include/libint2/boost/preprocessor.hpp
$(TEST3).cc :: $(TOPDIR)/include/libint2/boost/preprocessor.hpp
$(TEST4).cc :: $(TOPDIR)/include/libint2/boost/preprocessor.hpp

endif

clean:: targetclean
	-rm -f */*.o */*.d

targetclean::
	-rm -f $(TEST1) $(TEST2) $(TEST3) $(TEST4)

distclean:: clean

